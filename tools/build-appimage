#!/bin/sh

if ! which podman > /dev/null 2>&1; then
	echo "podman is not in your path"
	exit 1
fi

CONTAINER_DIR=$(readlink -f "$(dirname "$0")")
CONTAINER_TAG="dbt8-appimage"
TARGET="appimage"

# Use the return code from `podman inspect` to determine if the container image
# needs to be created.
if ! podman inspect $CONTAINER_TAG > /dev/null 2>&1; then
	"${CONTAINER_DIR}/build-appimage-container" || exit 1
fi

if [ "$ARCH" = "" ]; then
	ARCH="x86_64"
fi

# Apply patches for successful builds on the old CentOS 7 container image
podman run \
		--rm \
		-v "${CONTAINER_DIR}/..:/usr/local/src/dbt8:rw,Z" \
		--env PKG_CONFIG_PATH="/usr/lib/pkgconfig" \
		--env ARCH="$ARCH" \
		--env DSGEN="${DSGEN}" \
		-w /usr/local/src/dbt8 \
		$CONTAINER_TAG \
		make DBMS="${DBMS}" -f Makefile.cmake "${TARGET}"

# I wonder if there is a better way to make sure the artifacts are all owned by
# the user running this.
podman run \
		--rm \
		-v "${CONTAINER_DIR}/..:/usr/local/src/dbt8:rw,Z" \
		-w /usr/local/src/dbt8 \
		-u root \
		$CONTAINER_TAG \
		chown -R root:root builds/appimage/
